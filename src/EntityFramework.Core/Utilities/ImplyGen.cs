// <auto-generated />
// ReSharper disable InconsistentNaming

#pragma warning disable 0169 

using System;

namespace Microsoft.Data.Entity.Utilities
{
	internal partial class ImplyTypes
	{
		// value types
		ImplyGeneric<char> Prop1;
		ImplyGeneric<char?> Prop2;
		ImplyGeneric<short> Prop3;
		ImplyGeneric<short?> Prop4;
		ImplyGeneric<ushort> Prop5;
		ImplyGeneric<ushort?> Prop6;
		ImplyGeneric<int> Prop7;
		ImplyGeneric<int?> Prop8;
		ImplyGeneric<uint> Prop9;
		ImplyGeneric<uint?> Prop10;
		ImplyGeneric<long> Prop11;
		ImplyGeneric<long?> Prop12;
		ImplyGeneric<ulong> Prop13;
		ImplyGeneric<ulong?> Prop14;
		ImplyGeneric<double> Prop15;
		ImplyGeneric<double?> Prop16;
		ImplyGeneric<decimal> Prop17;
		ImplyGeneric<decimal?> Prop18;
		ImplyGeneric<float> Prop19;
		ImplyGeneric<float?> Prop20;
		ImplyGeneric<bool> Prop21;
		ImplyGeneric<bool?> Prop22;
		ImplyGeneric<byte> Prop23;
		ImplyGeneric<byte?> Prop24;
		ImplyGeneric<Guid> Prop25;
		ImplyGeneric<Guid?> Prop26;
		ImplyGeneric<TimeSpan> Prop27;
		ImplyGeneric<TimeSpan?> Prop28;
		ImplyGeneric<DateTime> Prop29;
		ImplyGeneric<DateTime?> Prop30;
		ImplyGeneric<DateTimeOffset> Prop31;
		ImplyGeneric<DateTimeOffset?> Prop32;
	}

	internal partial class ImplyGeneric<T>
	{
		// system objects
        ImplyGeneric<object, T> Prop33;
        ImplyGeneric<T, object> Prop34;
        ImplyGeneric<string, T> Prop35;
        ImplyGeneric<T, string> Prop36;

		ImplyGeneric<char, T> Prop37;
		ImplyGeneric<char?, T> Prop38;
		ImplyGeneric<T, char> Prop39;
		ImplyGeneric<T, char?> Prop40;
		ImplyGeneric<short, T> Prop41;
		ImplyGeneric<short?, T> Prop42;
		ImplyGeneric<T, short> Prop43;
		ImplyGeneric<T, short?> Prop44;
		ImplyGeneric<ushort, T> Prop45;
		ImplyGeneric<ushort?, T> Prop46;
		ImplyGeneric<T, ushort> Prop47;
		ImplyGeneric<T, ushort?> Prop48;
		ImplyGeneric<int, T> Prop49;
		ImplyGeneric<int?, T> Prop50;
		ImplyGeneric<T, int> Prop51;
		ImplyGeneric<T, int?> Prop52;
		ImplyGeneric<uint, T> Prop53;
		ImplyGeneric<uint?, T> Prop54;
		ImplyGeneric<T, uint> Prop55;
		ImplyGeneric<T, uint?> Prop56;
		ImplyGeneric<long, T> Prop57;
		ImplyGeneric<long?, T> Prop58;
		ImplyGeneric<T, long> Prop59;
		ImplyGeneric<T, long?> Prop60;
		ImplyGeneric<ulong, T> Prop61;
		ImplyGeneric<ulong?, T> Prop62;
		ImplyGeneric<T, ulong> Prop63;
		ImplyGeneric<T, ulong?> Prop64;
		ImplyGeneric<double, T> Prop65;
		ImplyGeneric<double?, T> Prop66;
		ImplyGeneric<T, double> Prop67;
		ImplyGeneric<T, double?> Prop68;
		ImplyGeneric<decimal, T> Prop69;
		ImplyGeneric<decimal?, T> Prop70;
		ImplyGeneric<T, decimal> Prop71;
		ImplyGeneric<T, decimal?> Prop72;
		ImplyGeneric<float, T> Prop73;
		ImplyGeneric<float?, T> Prop74;
		ImplyGeneric<T, float> Prop75;
		ImplyGeneric<T, float?> Prop76;
		ImplyGeneric<bool, T> Prop77;
		ImplyGeneric<bool?, T> Prop78;
		ImplyGeneric<T, bool> Prop79;
		ImplyGeneric<T, bool?> Prop80;
		ImplyGeneric<byte, T> Prop81;
		ImplyGeneric<byte?, T> Prop82;
		ImplyGeneric<T, byte> Prop83;
		ImplyGeneric<T, byte?> Prop84;
		ImplyGeneric<Guid, T> Prop85;
		ImplyGeneric<Guid?, T> Prop86;
		ImplyGeneric<T, Guid> Prop87;
		ImplyGeneric<T, Guid?> Prop88;
		ImplyGeneric<TimeSpan, T> Prop89;
		ImplyGeneric<TimeSpan?, T> Prop90;
		ImplyGeneric<T, TimeSpan> Prop91;
		ImplyGeneric<T, TimeSpan?> Prop92;
		ImplyGeneric<DateTime, T> Prop93;
		ImplyGeneric<DateTime?, T> Prop94;
		ImplyGeneric<T, DateTime> Prop95;
		ImplyGeneric<T, DateTime?> Prop96;
		ImplyGeneric<DateTimeOffset, T> Prop97;
		ImplyGeneric<DateTimeOffset?, T> Prop98;
		ImplyGeneric<T, DateTimeOffset> Prop99;
		ImplyGeneric<T, DateTimeOffset?> Prop100;
	}
}
